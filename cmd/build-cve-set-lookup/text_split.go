package main

import (
	"strings"

	"github.com/fatih/camelcase"

	"github.com/anchore/grype-db/cmd/build-cve-set-lookup/termset"
)

// processes the text, returning a searchable set of individual terms
func getTextTerms(t string) termset.Set {
	// split urls based on segments, e.g. github.com/org/repo will have distinct tokens
	t = urlPat.ReplaceAllStringFunc(t, func(s string) string {
		parts := urlSplitter.Split(t, -1)
		if !keepHosts.Has(parts[0]) {
			return ""
		}
		return strings.Join(parts, " ")
	})

	out := termset.Set{}

	for _, term := range whitespace.Split(t, -1) {
		// each word we get like some.thing some-thing some_thing split into separate words "some thing" and combine to "something"
		appendVariation(out, term)
		for _, part := range camelcase.Split(term) {
			appendVariation(out, part)
		}
		for _, part := range disallowedChars.Split(term, -1) {
			appendVariation(out, part)
		}
	}

	return out
}

func appendVariation(terms termset.Set, term string) {
	term = strings.ToLower(term)
	term = disallowedChars.ReplaceAllString(term, "")
	if term == "" || isHashLike(term) {
		return
	}
	terms.Add(term)
}

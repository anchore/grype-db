package main

import "golang.org/x/exp/maps"

// weightByYear weights all the terms based on the most recent year they appear in a CVE within
// the overall range of years; if the range is 2004-2024, and the year is 2024 this would be 1,
// if the year is 2014, this would be .5 and so on
func weightByYear(l lookups) lookups {
	min := 0
	max := 0
	for _, p := range l.allProducts {
		if p.cveMaxYear <= 0 {
			continue
		}
		if min == 0 || p.cveMaxYear < min {
			min = p.cveMaxYear
		}
		if max == 0 || p.cveMaxYear > max {
			max = p.cveMaxYear
		}
	}

	// same year is 1
	min -= 1

	for _, p := range l.allProducts {
		if p.cveMaxYear <= 0 {
			log("no year for CPE:", p.cpe, "from CVEs:", maps.Keys(p.cves))
			continue
		}
		factor := float64(p.cveMaxYear-min) / float64(max-min)
		for term, weight := range p.weights {
			p.weights[term] = weight * factor
		}
	}

	return l
}

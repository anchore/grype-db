package termset

import "golang.org/x/exp/maps"

type Set map[string]float64

func New(terms ...string) Set {
	s := Set{}
	s.Add(terms...)
	return s
}

func (s Set) Add(terms ...string) {
	for _, term := range terms {
		s[term] = s[term] + 1
	}
}

func (s Set) AddAll(terms Set) {
	for term, count := range terms {
		s[term] = s[term] + count
	}
}

func (s Set) Remove(terms ...string) {
	for _, term := range terms {
		delete(s, term)
	}
}

func (s Set) Has(term string) bool {
	return s[term] > 0
}

func (s Set) List() []string {
	return maps.Keys(s)
}

// SetAll sets all values to the provided value
func (s Set) SetAll(value float64) {
	for term := range s {
		s[term] = value
	}
}

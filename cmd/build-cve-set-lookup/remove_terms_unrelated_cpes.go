package main

func removeTermsFromUnrelatedCPEs(l lookups) lookups {
	// iterate over every product, and divide term percentages on like terms but unrelated products
	for _, p1 := range l.allProducts {
		// remove terms from p1 that are present in p2, if they aren't part of the cpe string
		for term := range p1.weights {
			termToProducts := l.termsToProducts[term]
			for _, p2 := range termToProducts {
				if isRelatedProduct(p1, p2) {
					continue
				}
				if p2.cpeTerms.Has(term) {
					continue
				}

				// reduce term weight
				weight := p2.weights[term]

				// only remove terms with low weights
				if weight < .01 {
					// remove term from p2
					l.removeProductTerm(p2, term)
				}
			}
		}
	}

	return l
}

func isRelatedProduct(p1, p2 *product) bool {
	if p1.cpe == p2.cpe {
		return true
	}
	// if any part of the CPE matches, e.g. a segment of the vendor or a segment of the product
	// this is considered "related" from a textual standpoint
	for term := range p1.cpeTerms {
		if p2.cpeTerms.Has(term) {
			return true
		}
	}
	// TODO -- some sort of letter similarity?
	return false
}

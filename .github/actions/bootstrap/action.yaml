name: "Bootstrap"
description: "Bootstrap all tools and dependencies"
inputs:
  go:
    description: "Install go"
    required: true
    default: "true"
  python:
    description: "Install python"
    required: true
    default: "true"
  go-version:
    description: "Go version to install"
    required: true
    default: "1.24.x"
  python-version:
    description: "Python version to install"
    required: true
    default: "3.12"
  use-go-cache:
    description: "Restore go cache"
    required: true
    default: "true"
  cache-key-prefix:
    description: "Prefix all cache keys with this value"
    required: true
    default: "311808ac26"
  build-cache-key-prefix:
    description: "Prefix build cache key with this value"
    required: true
    default: "6d31debf8b"
  tools:
    description: "whether to install tools"
    default: "true"
  bootstrap-apt-packages:
    description: "Space delimited list of tools to install via apt"
    default: "sqlite3 libsqlite3-dev"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@v5
      if: inputs.go == 'true'
      with:
        go-version: ${{ inputs.go-version }}

    - name: Install uv
      if: inputs.python == 'true'
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - uses: actions/setup-python@v5
      if: inputs.python == 'true'
      with:
        python-version: ${{ inputs.python-version }}

    - name: Bootstrap python dependencies
      if: inputs.python == 'true'
      shell: bash
      run: make bootstrap-python

    - name: Restore tool cache
      if: inputs.tools == 'true'
      id: tool-cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v3.4.0
      with:
        path: ${{ github.workspace }}/.tool
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}

    - name: (cache-miss) Bootstrap project tools
      shell: bash
      if: steps.tool-cache.outputs.cache-hit != 'true' && inputs.tools == 'true'
      run: make bootstrap-tools

    - name: (cache-miss) Bootstrap go dependencies
      shell: bash
      if: inputs.go == 'true' && steps.go-mod-cache.outputs.cache-hit != 'true' && inputs.use-go-cache == 'true'
      run: make bootstrap-go

    - name: Install apt packages
      if: inputs.bootstrap-apt-packages != ''
      shell: bash
      run: |
        DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y ${{ inputs.bootstrap-apt-packages }}

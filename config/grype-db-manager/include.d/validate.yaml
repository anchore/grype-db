# validate:

listing:
  image: "centos:8.2.2004"
  minimum-packages: 85
  minimum-vulnerabilities: 400

default-max-year: 2021
gates:
  # new vulnerabilities are added all the time, instead of keeping up it's easier to ignore newer entries.
  # This approach helps tremendously with keeping the analysis relatively stable.
  - gate:
      # float between 0 and 1, the maximum allowable difference below the OSS F1 score before the gate fails (default 0,
      # meaning the test F1 score must be equal to or greater than the OSS F1 score to pass the gate)
      max_f1_regression: 0.15

      # float between 0 and 100, the maximum % of unlabeled matches for a scan result before the gate fails (default 10%,
      # meaning the test scan must have less than 10% unlabeled matches to pass the gate)
      # TODO: this should be at 25 after we sunset v1 and v2 schemas
      max_unlabeled_percent: 50

      # integer, the maximum allowable introduced FNs by the test scan (but found by the OSS scan) before the gate fails
      # (default 0, meaning the test scan must have the same or fewer FNs than the OSS scan to pass the gate)
      max_new_false_negatives: 10
      max_year: 2021
      candidate_tool_label: 'custom-db'

    # these are the set of images we will capture grype scans for using an existing published DB and a newly build DB.
    # The assumption is that they should perform similarly or the new DB should perform better. We do allow for the new
    # DB to perform slightly worse based on the above gate configuration, but not by much. These images are NOT
    # meant to be exhaustive or even cover all namespaces.
    # note: always reference images with BOTH a tag and a digest
    images:
      - docker.io/anchore/test_images:grype-quality-node-d89207b@sha256:f56164678054e5eb59ab838367373a49df723b324617b1ba6de775749d7f91d4
      - docker.io/anchore/test_images:grype-quality-python-d89207b@sha256:b2b58a55c0b03c1626d2aaae2add9832208b02124dda7b7b41811e14f0fb272c
      - docker.io/anchore/test_images:grype-quality-java-d89207b@sha256:b3534fc2e37943136d5b54e3a58b55d4ccd4363d926cf7aa5bf55a524cf8275b
      - docker.io/anchore/test_images:grype-quality-golang-d89207b@sha256:7536ee345532f674ec9e448e3768db4e546c48220ba2b6ec9bc9cfbfb3b7b74a
      - docker.io/anchore/test_images:grype-quality-ruby-d89207b@sha256:1a5a5f870924e88a6f0f2b8089cf276ef0a79b5244a052cdfe4a47bb9e5a2c10
      - docker.io/alpine:3.2@sha256:ddac200f3ebc9902fb8cfcd599f41feb2151f1118929da21bcef57dc276975f9
      - docker.io/debian:7@sha256:81e88820a7759038ffa61cff59dfcc12d3772c3a2e75b7cfe963c952da2ad264
      - registry.access.redhat.com/ubi8@sha256:68fecea0d255ee253acbf0c860eaebb7017ef5ef007c25bee9eeffd29ce85b29
      - docker.io/ubuntu:20.04@sha256:9d42d0e3e57bc067d10a75ee33bdd1a5298e95e5fc3c5d1fce98b455cb879249
    # Old versions of grype may find no matches for some newer images
    # Do not fail quality gate over this
    allow_empty_results_for_schemas: [1,2]

  - gate:
      max_f1_regression: 0.15
      max_unlabeled_percent: 25
      max_new_false_negatives: 10
      max_year: 2022 # important - Azure Linux 3 doesn't have enough CVEs going back to 2021
      candidate_tool_label: 'custom-db'
    # Old versions of grype don't recognize Azure Linux 3, and so will make an
    # empty result set
    allow_empty_results_for_schemas: [1,2,3,4]

    images:
      - docker.io/anchore/test_images:azurelinux3-63671fe@sha256:2d761ba36575ddd4e07d446f4f2a05448298c20e5bdcd3dedfbbc00f9865240d
